# Production Dockerfile for {{frontend}} frontend

FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

{{#if frontend.nextjs}}
# Build Next.js application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S frontend -u 1001

WORKDIR /app

# Copy built application
COPY --from=builder --chown=frontend:nodejs /app/.next ./.next
COPY --from=builder --chown=frontend:nodejs /app/public ./public
COPY --from=builder --chown=frontend:nodejs /app/package*.json ./
COPY --from=builder --chown=frontend:nodejs /app/node_modules ./node_modules

USER frontend

EXPOSE 3000

ENV NODE_ENV=production

CMD ["npm", "start"]
{{else}}
# Build application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine AS production

# Copy built files to nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
{{/if}}
